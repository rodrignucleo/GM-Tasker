// <auto-generated />
using System;
using GMTasker.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GMTasker.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230528235749_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GMTasker.API.Models.RequisicaoModel", b =>
                {
                    b.Property<int>("id_requisicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("data_conclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("data_prevista_conclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("id_atual_responsavel")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("id_sprint")
                        .HasColumnType("int");

                    b.Property<int>("id_status")
                        .HasColumnType("int");

                    b.Property<int?>("id_usuario_criacao")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_requisicao");

                    b.HasIndex("id_atual_responsavel");

                    b.HasIndex("id_sprint");

                    b.HasIndex("id_status");

                    b.HasIndex("id_usuario_criacao");

                    b.ToTable("tb_requisicao");

                    b.HasData(
                        new
                        {
                            id_requisicao = 1,
                            data_cadastro = new DateTime(2023, 5, 28, 20, 57, 49, 590, DateTimeKind.Local).AddTicks(4302),
                            data_conclusao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            data_prevista_conclusao = new DateTime(2023, 6, 4, 20, 57, 49, 590, DateTimeKind.Local).AddTicks(4303),
                            id_atual_responsavel = 1,
                            id_status = 1,
                            id_usuario_criacao = 2,
                            nome = "Desenvolver API"
                        });
                });

            modelBuilder.Entity("GMTasker.API.Models.SprintModel", b =>
                {
                    b.Property<int>("id_sprint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("data_conclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("id_status")
                        .HasColumnType("int");

                    b.Property<int?>("id_usuario_criacao")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_sprint");

                    b.HasIndex("id_status");

                    b.HasIndex("id_usuario_criacao");

                    b.ToTable("tb_sprint");

                    b.HasData(
                        new
                        {
                            id_sprint = 1,
                            data_cadastro = new DateTime(2023, 5, 28, 20, 57, 49, 590, DateTimeKind.Local).AddTicks(3940),
                            data_conclusao = new DateTime(2023, 5, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            id_status = 2,
                            id_usuario_criacao = 1,
                            nome = "JUNHO 1 a 15"
                        });
                });

            modelBuilder.Entity("GMTasker.API.Models.StatusModel", b =>
                {
                    b.Property<int>("id_status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("conta_horas")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_status");

                    b.ToTable("tb_status");

                    b.HasData(
                        new
                        {
                            id_status = 1,
                            conta_horas = true,
                            nome = "DESENVOLVIMENTO"
                        },
                        new
                        {
                            id_status = 2,
                            conta_horas = false,
                            nome = "AGUARDANDO"
                        },
                        new
                        {
                            id_status = 3,
                            conta_horas = false,
                            nome = "CONCLUIDO"
                        });
                });

            modelBuilder.Entity("GMTasker.API.Models.UsuarioModel", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha_antiga")
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_usuario");

                    b.ToTable("tb_usuario");

                    b.HasData(
                        new
                        {
                            id_usuario = 1,
                            cpf = "12345678910",
                            email = "rodrignucleo@gmtasker.com",
                            nome = "Rodrigo Ribeiro",
                            senha = "$2a$10$98deNIMv75FawNSH/BY9lObUVMGMBzOPFDtnAx/GeK/UKXDX5/hc.",
                            senha_antiga = "$2a$10$4LnnDPZ5WRXhwgWQHf4.a.HLrdZGH9H3YQqnamSJUStNjQB6b.ayq",
                            telefone = "11992668225"
                        },
                        new
                        {
                            id_usuario = 2,
                            cpf = "98765412398",
                            email = "patricia.oliveira@gmtasker.com",
                            nome = "Patricia Oliveira",
                            senha = "$2a$10$.Zi97I79ayAwrWHfQ/X/QORms.cnArruFFFSj7OPMH6b5sKYWa9eq",
                            senha_antiga = "$2a$10$3TLZkaUbm.2uuKQlIo5szOFHopbLLQRSiNxhgE.Uym2mfGjyM4I8C",
                            telefone = "9899265826597"
                        });
                });

            modelBuilder.Entity("GMTasker.API.Models.RequisicaoModel", b =>
                {
                    b.HasOne("GMTasker.API.Models.UsuarioModel", "UsuarioResponsavel")
                        .WithMany()
                        .HasForeignKey("id_atual_responsavel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMTasker.API.Models.SprintModel", "Sprint")
                        .WithMany()
                        .HasForeignKey("id_sprint");

                    b.HasOne("GMTasker.API.Models.StatusModel", "Status")
                        .WithMany()
                        .HasForeignKey("id_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMTasker.API.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario_criacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sprint");

                    b.Navigation("Status");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("GMTasker.API.Models.SprintModel", b =>
                {
                    b.HasOne("GMTasker.API.Models.StatusModel", "Status")
                        .WithMany()
                        .HasForeignKey("id_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMTasker.API.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario_criacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
